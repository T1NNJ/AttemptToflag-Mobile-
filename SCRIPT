local UserInputService = game:GetService("UserInputService")
local Heartbeat = game:GetService("RunService").Heartbeat
local walkSpeed = 15
local plrs = game:GetService'Players'
local Heartbeat = game:GetService("RunService").Heartbeat
local plr = plrs.LocalPlayer
local mouse = plr:GetMouse()
local rep = game:GetService'ReplicatedStorage'
local uis = game:GetService'UserInputService'
local ts = game:GetService'TweenService'
local rs = game:GetService'RunService'

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()

local function Notify(title,text,duration)
    game:GetService'StarterGui':SetCore('SendNotification',{
        Title = tostring(title),
        Text = tostring(text),
        Duration = tonumber(duration),
    })
end

local function GetChar()
    local Char = Player.Character or Player.CharacterAdded:Wait()
    return Char
end

spawn(function()
    while true do rs.RenderStepped:wait()
        pcall(function()
            if not uis:IsKeyDown(Enum.KeyCode.LeftShift) then
                plr.Character.Humanoid.WalkSpeed = walkSpeed
            elseif uis:IsKeyDown(Enum.KeyCode.LeftShift) then
                plr.Character.Humanoid.WalkSpeed = walkSpeed+7
            end
        end)
    end
end)

spawn(function()
    while true do rs.RenderStepped:wait()
        pcall(function()
            if not uis:IsKeyDown(Enum.KeyCode.E) then
                plr.Character.Humanoid.WalkSpeed = walkSpeed
            elseif uis:IsKeyDown(Enum.KeyCode.E) then
                plr.Character.Humanoid.WalkSpeed = walkSpeed+9
            end
        end)
    end
end)

local function AddCd(tool,Cd)
    local cd = Instance.new('IntValue',tool)
    cd.Name = 'ClientCD'
    game.Debris:AddItem(cd,Cd)
end
local function Shoot(firstPos,nextPos,Revolver)
    if Revolver:FindFirstChild'Barrel' and Revolver.Barrel:FindFirstChild'Attachment' then
        if Revolver.Barrel.Attachment:FindFirstChild'Sound' then
            local SoundClone = Revolver.Barrel.Attachment.Sound:Clone()
            SoundClone.Name = 'Uncopy'
            SoundClone.Parent = Revolver.Barrel.Attachment
            SoundClone:Play()
            game.Debris:AddItem(SoundClone, 1)
        end
        local FilterTable = {}
        table.insert(FilterTable, plr.Character)
        table.insert(FilterTable, game.Workspace['Target Filter'])
        for _, v in pairs(game.Workspace:GetDescendants()) do
            if v.ClassName == 'Accessory' then
                table.insert(FilterTable, v)
            end
        end
        local a_1, a_2, a_3 = game.Workspace:FindPartOnRayWithIgnoreList(Ray.new(firstPos, (nextPos - firstPos).Unit * 100), FilterTable)
        local BulletCl = rep['Revolver Bullet']:Clone()
        game.Debris:AddItem(BulletCl, 1)
        BulletCl.Parent = game.Workspace['Target Filter']
        local mg = (firstPos - a_2).Magnitude
        BulletCl.Size = Vector3.new(0.2, 0.2, mg)
        BulletCl.CFrame = CFrame.new(firstPos, nextPos) * CFrame.new(0, 0, -mg / 2)
        ts:Create(BulletCl, TweenInfo.new(0.4, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
            Size = Vector3.new(0.06, 0.06, mg), 
            Transparency = 1
        }):Play()
        if a_1 then
            local expPart = Instance.new'Part'
            game.Debris:AddItem(expPart, 2)
            expPart.Name = 'Exploding Neon Part'
            expPart.Anchored = true
            expPart.CanCollide = true
            expPart.Shape = 'Ball'
            expPart.Material = Enum.Material.Neon
            expPart.BrickColor = BulletCl.BrickColor
            expPart.Size = Vector3.new(0.1, 0.1, 0.1)
            expPart.Parent = game.Workspace['Target Filter']
            expPart.Position = a_2
            ts:Create(expPart, TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {
                Size = Vector3.new(2, 2, 2), 
                Transparency = 1
            }):Play()
            if Revolver:FindFirstChild'DamageRemote' and a_1.Parent:FindFirstChild'Humanoid' then
                Revolver.DamageRemote:FireServer(a_1.Parent.Humanoid)
            end
        end
    end
end


local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/T1NNJ/Attemptofflag/main/GUI", true))()
local Table = {}

local window = Lib:CreateWindow("Chaos V7.6.2 (MOB)")

window:Section(" Main Functions")

window:Button("Check for a pencil",function()
local toolName = "Pencil"
local synx = "lapiz"

local function checkTools()
    for _, player in pairs(game.Players:GetPlayers()) do
        local backpack = player.Backpack
        if backpack then
            local tool = backpack:FindFirstChild(toolName)
            if tool then
                game:GetService("StarterGui"):SetCore("ChatMakeSystemMessage", {
                    Text = player.Name .. " tiene equipado un " .. synx
                })
            end
        end
    end
end

-- Revisa los equipos cada cierto tiempo
while true do
    checkTools()
    -- Espera un tiempo antes de volver a revisar (puedes ajustar este valor)
    wait(6)
end
end)
window:Button("Teleport to Pencil (NEW)",function()
local Players = game:GetService("Players")
local toolName = "Pencil"

local function teleportToPencil()
    for _, player in pairs(Players:GetPlayers()) do
        local character = player.Character
        if character then
            local tool = character:FindFirstChild(toolName)
            if tool then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = humanoidRootPart.CFrame + Vector3.new(0, 0, 5)
                    return
                else
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = tool.Handle.CFrame + Vector3.new(0, 0, 5)
                    return
                end
            end
        end
    end
    warn("No player found with the tool "..toolName.." equipped.")
end

teleportToPencil()
end)



window:Button("Inf Jump",function()
local Player = game:GetService'Players'.LocalPlayer;
local UIS = game:GetService'UserInputService';
 
_G.JumpHeight = 50;
 
function Action(Object, Function) if Object ~= C4 then Function(Object); end end
 
UIS.InputBegan:connect(function(UserInput)
    if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
        Action(Player.Character.Humanoid, function(self)
            if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                Action(self.Parent.HumanoidRootPart, function(self)
                    self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                end)
            end
        end)
    end
end)
end)

window:Button("RGB Sprint Bar",function()
local speed = 10
while true do
	for i = 0,1,0.001*speed do
		game:GetService("Players").LocalPlayer.PlayerGui.Sprinting.Frame.Frame.BackgroundColor3 = Color3.fromHSV(i,1,1)
		wait()
	end
end
end)

window:Button("Set Night",function()
game.Lighting:SetMinutesAfterMidnight(155)
    end)

window:Button("Infinite Yield v5",function()
loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()
end)

game.StarterGui:SetCore("SendNotification", {
    Title = "Loading..";
    Text = "Wait until load..";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 2;
    callback = bindableFunction;
})

window:Section(" Target List")

wait(.1)

window:Dropdown("Select Target",{location = Table,flag = "player1",search = true --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe","Emerald Greatsword","Blood Dagger"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()game.StarterGui:SetCore("SendNotification", {
    Title = "Target:";
    Text = "Choosed sucessfully!";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 5;
    callback = bindableFunction;
})
game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
if IsTyping then return end
if Input.KeyCode == Enum.KeyCode.KeypadMinus then
wait()
game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(Table["player1"])
local A_1 = game:GetService("Workspace"):FindFirstChild(Table["player1"]).Humanoid
        local Target = A_1
           repeat
               wait()
local A_1 = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(A_1) and not v:FindFirstChild("ForceField")
          until Target.Health <= 0
end
end)
end)

wait(.1)

window:Dropdown("Select Target",{location = Table,flag = "player2",search = true --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe","Emerald Greatsword","Blood Dagger"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()game.StarterGui:SetCore("SendNotification", {
    Title = "Target:";
    Text = "Choosed sucessfully!";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 5;
    callback = bindableFunction;
})
game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
if IsTyping then return end
if Input.KeyCode == Enum.KeyCode.KeypadMinus then
wait()
game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(Table["player2"])
local A_2 = game:GetService("Workspace"):FindFirstChild(Table["player2"]).Humanoid
        local Target = A_2
           repeat
               wait()
local A_2 = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(A_2) and not v:FindFirstChild("ForceField")
          until Target.Health <= 0
end
end)
end)

wait(.1)

window:Dropdown("Select Target",{location = Table,flag = "player3",search = true --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe","Emerald Greatsword","Blood Dagger"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()game.StarterGui:SetCore("SendNotification", {
    Title = "Target:";
    Text = "Choosed sucessfully!";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 5;
    callback = bindableFunction;
})
game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
if IsTyping then return end
if Input.KeyCode == Enum.KeyCode.KeypadMinus then
wait()
game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(Table["player3"])
local A_3 = game:GetService("Workspace"):FindFirstChild(Table["player3"]).Humanoid
        local Target = A_3
           repeat
               wait()
local A_3 = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(A_3) and not v:FindFirstChild("ForceField")
          until Target.Health <= 0
end
end)
end)

wait(.1)

window:Dropdown("Select Target",{location = Table,flag = "player4",search = true --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe","Emerald Greatsword","Blood Dagger"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()game.StarterGui:SetCore("SendNotification", {
    Title = "Target:";
    Text = "Choosed sucessfully!";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 5;
    callback = bindableFunction;
})
game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
if IsTyping then return end
if Input.KeyCode == Enum.KeyCode.KeypadMinus then
wait()
game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(Table["player4"])
local A_4 = game:GetService("Workspace"):FindFirstChild(Table["player4"]).Humanoid
        local Target = A_4
           repeat
               wait()
local A_4 = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(A_4) and not v:FindFirstChild("ForceField")
          until Target.Health <= 0
          end
end)
end)

wait(.1)

window:Dropdown("Select Target",{location = Table,flag = "player4",search = true --[[AddsSearchBar]], list = {"Mace","Chainsaw","Knife","Pan","Pencil","Baseball Bat","Scythe","Emerald Greatsword","Blood Dagger"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()game.StarterGui:SetCore("SendNotification", {
    Title = "Target:";
    Text = "Choosed sucessfully!";
    Icon = "http://www.roblox.com/asset/?id=5585103223";
    Duration = 5;
    callback = bindableFunction;
})
game:GetService("UserInputService").InputBegan:Connect(function(Input, IsTyping)
if IsTyping then return end
if Input.KeyCode == Enum.KeyCode.KeypadMinus then
wait()
game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(Table["player5"])
local A_5 = game:GetService("Workspace"):FindFirstChild(Table["player5"]).Humanoid
        local Target = A_5
           repeat
               wait()
local A_5 = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Tool").DamageRemote:FireServer(A_5) and not v:FindFirstChild("ForceField")
          until Target.Health <= 0
          end
end)
end)



local Pressing = false
window:Toggle("Start/Stop Looping",{location = Table, flag = "enable"},function()
local stopFlag = false

local function pressKey()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.KeypadMinus, false, game)
end

if Pressing then
    Pressing = false
    stopFlag = true
else
    Pressing = true
    stopFlag = false
    spawn(function()
        repeat
            pressKey()
            wait(1)
            game:GetService("RunService").Heartbeat:Wait()
        until stopFlag or not Pressing
    end)
end
end)

local KillingNear = false
window:Toggle("Kill All",{location = Table, flag = "enable"},function()   
local stopFlag = false

local Player = game.Players.LocalPlayer
local Workspace = game.Workspace

local function GetChar()
    return Player.Character
end

local function FindNearestHumanoid()
    local target = nil
    local nearestDistance = 10000
    
    for i, v in pairs(Workspace:GetChildren()) do
        if v ~= GetChar() then
            local humanoid = v:FindFirstChild("Humanoid")
            local rootPart = v:FindFirstChild("HumanoidRootPart")
            
            if humanoid and rootPart then
                local distance = (rootPart.Position - GetChar().HumanoidRootPart.Position).magnitude
                
                if humanoid.Health > 0 and not v:FindFirstChild("ForceField") and distance <= nearestDistance then
                    target = humanoid
                    nearestDistance = distance
                end
            end
        end
    end
    
    return target
end

local function DamageTarget(target)
    local tool = GetChar():FindFirstChildOfClass("Tool")
    
    if tool then
        tool.DamageRemote:FireServer(target)
    end
end

local function CheckTargets()
    while not stopFlag and KillingNear do
        local nearestTarget = FindNearestHumanoid()
        
        if nearestTarget then
            DamageTarget(nearestTarget)
        end
        
        wait()
    end
end

if KillingNear then
    KillingNear = false
    stopFlag = true
else
    KillingNear = true
    stopFlag = false
    spawn(function()
        CheckTargets()
    end)
end
end)

window:Button("God Mode (Void)",function()
game.StarterGui:SetCore("SendNotification", {
    Title = "God mode:";
    Text = "This got anti void pencil include!";
    Icon = "http://www.roblox.com/asset/?id=5585095509";
    Duration = 5;
    callback = bindableFunction;
})
game:GetService("Players").LocalPlayer.Character.PickupRemote:FireServer()
wait()
game.Players.LocalPlayer.Character["Torso"]:Destroy()
wait()
game.Players.LocalPlayer.Character["Humanoid"]:Destroy()
wait(1)
local player = game.Players.LocalPlayer
local Blade = game.Workspace[player.Name]:WaitForChild("Pencil"):FindFirstChild("Blade"):Destroy()
wait()
local Hadle = game.Workspace[player.Name]:WaitForChild("Pencil"):FindFirstChild("Handle"):Destroy()
wait()
local Mesh1 = game.Workspace[player.Name]:WaitForChild("Pencil"):FindFirstChild("Meshes/wooden pencil_Cylinder.002"):Destroy()
wait() 
local Mesh2 = game.Workspace[player.Name]:WaitForChild("Pencil"):FindFirstChild("Meshes/wooden pencil_Cylinder.003"):Destroy()
wait()
local Mesh3 = game.Workspace[player.Name]:WaitForChild("Pencil"):FindFirstChild("Meshes/wooden pencil_Cylinder.003"):Destroy()
end)

window:Section(" Fling A Player")

window:Dropdown("Fling A Player",{location = Table,flag = "Target",search = true --[[AddsSearchBar]], list = {"1","2","3","4","5","6","7","8","9","0"} --[[Wont work when PlayerList = true]], PlayerList = true --[[ Turns the list into the players in the server ]]},function()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local speaker = game.Players:GetPlayerFromCharacter(game.Players.LocalPlayer.Character)

if not speaker then
    warn("Speaker not found")
    return
end

local headSit = nil

local function getRoot(character)
    return character:FindFirstChild("HumanoidRootPart") or character.PrimaryPart or character:FindFirstChild("Torso")
end

local function getPlayer(playerName, speaker)
    local selectedPlayers = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name == playerName and player ~= speaker then
            table.insert(selectedPlayers, player)
        end
    end
    return selectedPlayers
end

local players = getPlayer(Table["Target"], speaker)

if headSit then
    headSit:Disconnect()
end

for i, v in ipairs(players) do
    if v and v.Character and v.Character:FindFirstChildOfClass('Humanoid') then
        speaker.Character:FindFirstChildOfClass('Humanoid').Sit = true

        headSit = RunService.Heartbeat:Connect(function()
            if Players:FindFirstChild(v.Name) and v.Character and getRoot(v.Character) and getRoot(speaker.Character) and speaker.Character:FindFirstChildOfClass('Humanoid').Sit == true then
                getRoot(speaker.Character).CFrame = getRoot(v.Character).CFrame * CFrame.Angles(0, math.rad(0), 0) * CFrame.new(0, 1.6, 0.4)
            else
                if headSit then
                    headSit:Disconnect()
                end
            end
        end)
    end
end

wait(0.2)

local Char = game.Players.LocalPlayer.Character
local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

for i,v in next, Hum:GetPlayingAnimationTracks() do
    v:Stop()
end

wait(0.5)

-- Fling player
local function flingPlayer(player)
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local flingForce = Vector3.new(0, 999999999999999999999999999, 0) -- Adjust the force as needed

                humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics, false)
                humanoid.PlatformStand = true
                humanoid:ChangeState(Enum.HumanoidStateType.Physics)

                rootPart.Velocity = flingForce
            end
        end
    end
end

local playerToFling = Players:FindFirstChild(Table["Target"])

if playerToFling then
    flingPlayer(playerToFling)
else
    warn("Player not found")
end

wait(0.5)

local Char = game.Players.LocalPlayer.Character
local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

for i,v in next, Hum:GetPlayingAnimationTracks() do
    v:Stop()
end

wait(7)

local player = game.Players.LocalPlayer
local humanoid = game.Workspace[player.Name].Humanoid
humanoid.Health = 0
end)

local Farming = false
window:Toggle("Farm Grenade 2",{location = Table, flag = "Farming"},function()
game.StarterGui:SetCore("SendNotification", {
    Title = "Dupe:";
    Text = "Hold on..";
    Icon = "http://www.roblox.com/asset/?id=5585095509";
    Duration = 3;
    callback = bindableFunction;
})
    if Farming then
        Farming = false
    else
        Farming = true
        repeat
local player = game.Players.LocalPlayer

repeat
    wait()
until player.Character

local player = game.Players.LocalPlayer

repeat
    wait(.6)
until player.Character

local playerGui = player:FindFirstChild("PlayerGui")
if playerGui then
    local menuScreen = playerGui:FindFirstChild("Menu Screen")
    if menuScreen and menuScreen:IsA("ScreenGui") then
        menuScreen.Enabled = false
        if menuScreen:FindFirstChild("RemoteEvent") then
            menuScreen.RemoteEvent:FireServer("Emerald Greatsword")
        else
            warn("RemoteEvent not found in Menu Screen.")
        end
    else
        warn("Menu Screen not found or is not a ScreenGui.")
    end
else
    warn("PlayerGui not found.")
end

local function performActionAfterSpawn()
    wait()
    if player.Character then
        player.Character:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(-287, 108, -48)
        wait(0.3)

        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.Health = 0
            wait()
local player = game.Players.LocalPlayer

repeat
    wait(.2)
until player.Character

local grenade2 = player.Backpack:FindFirstChild("Grenade 2")

if grenade2 then
    local humanoid = player.Character:FindFirstChild("Humanoid")

    if humanoid then
        humanoid:EquipTool(grenade2)
    else
        warn("Humanoid not found in player's character.")
    end
else
    warn("Grenade 2 tool not found in player's backpack.")
           end
            wait(0.3)
            game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.Backspace, false, game)
        end
    else
        warn("Player or Humanoid not found.")
    end
end

if player.Character then
    performActionAfterSpawn()
else
    player.CharacterAdded:Connect(performActionAfterSpawn)
end
 game:GetService("RunService").Heartbeat:Wait()
        until stopFlag or not Farming
    end
end)

window:Button("Collect All Grenades (W FF)",function()
local root = game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("HumanoidRootPart") or game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("BasePart")

local function touch(x)
    x = x:FindFirstAncestorWhichIsA("BasePart")
    if x and firetouchinterest then
        if x.Name == "Spiked Trap" then
            -- Ignorar el 'Spiked Trap'
            return
        end
        
        task.spawn(function()
            firetouchinterest(x, root, 1)
            wait()
            firetouchinterest(x, root, 0)
        end)
        x.CFrame = root.CFrame
    end
end

for _, descendant in ipairs(workspace:GetDescendants()) do
    if descendant:IsA("TouchTransmitter") then
        touch(descendant)
    end
end
end) 

window:Button("Spam Grenade 2",function()
        for _,v in next,plr.Backpack:GetChildren() do
            if v.Name == 'Grenade 2' and v:FindFirstChild'RemoteEvent' then
                v.Parent = plr.Character
                v.RemoteEvent:FireServer(mouse.Hit.LookVector)
                v.Parent = plr.Backpack
            end
        end
end)

window:Button("Teleport To Farm Zone",function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-292, 60, -68)
end)

window:Button("Teleport Up (Exit)",function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-286, 97, -2)
end)

--Disable AutoJump

game.Players.LocalPlayer.AutoJumpEnabled = false

--Q backspace

game.StarterGui:SetCore("SendNotification", {
    Title = "Loaded!";
    Text = "GUI Loaded sucessfully, version mobile!";
    Icon = "http://www.roblox.com/asset/?id=5585095509"; 
    Duration = 5; 
    callback = bindableFunction;
})
